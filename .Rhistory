"College/University Student Housing:", efaAnalysis$NIP_College))%>%
addProviderTiles(providers$CartoDB.Positron) %>%  # providers$Esri.WorldStreetMap
addCircleMarkers(data = utahHealth) %>%
addCircleMarkers(data = utahSchooles) %>%
addLayersControl(
overlayGroups = efaAnalysis$group,
options = layersControlOptions(collapsed=FALSE)
)
leaflet(efaAnalysis) %>%
addPolygons(data = efaAnalysis$SHAPE,
fillOpacity = .5,
fillColor = efaAnalysis$color,
color = efaAnalysis$color,
group = efaAnalysis$group,
weight = .8,
popup = paste("Population:", efaAnalysis$Population, "<br>",
"Population Density:", efaAnalysis$PopDens, "<br>",
"Poverty %:", efaAnalysis$PercPovert, "<br>",
"Minority %:", efaAnalysis$PercMinori, "<br>",
"ZeroCar %:", efaAnalysis$PercZeroCa, "<br>",
"Institutionalized Population:", efaAnalysis$IP, "<br>",
"Nursing/Skilled-Nursing Facilities:", efaAnalysis$IP_Nursing, "<br>",
"Noninstitutionalized Population:", efaAnalysis$NIP, "<br>",
"College/University Student Housing:", efaAnalysis$NIP_College))%>%
addProviderTiles(providers$CartoDB.Positron) %>%  # providers$Esri.WorldStreetMap
addMarkers(data = utahHealth) %>%
addMarkers(data = utahSchooles) %>%
addLayersControl(
overlayGroups = efaAnalysis$group,
options = layersControlOptions(collapsed=FALSE)
)
leaflet(efaAnalysis) %>%
addPolygons(data = efaAnalysis$SHAPE,
fillOpacity = .5,
fillColor = efaAnalysis$color,
color = efaAnalysis$color,
group = efaAnalysis$group,
weight = .8,
popup = paste("Population:", efaAnalysis$Population, "<br>",
"Population Density:", efaAnalysis$PopDens, "<br>",
"Poverty %:", efaAnalysis$PercPovert, "<br>",
"Minority %:", efaAnalysis$PercMinori, "<br>",
"ZeroCar %:", efaAnalysis$PercZeroCa, "<br>",
"Institutionalized Population:", efaAnalysis$IP, "<br>",
"Nursing/Skilled-Nursing Facilities:", efaAnalysis$IP_Nursing, "<br>",
"Noninstitutionalized Population:", efaAnalysis$NIP, "<br>",
"College/University Student Housing:", efaAnalysis$NIP_College))%>%
addProviderTiles(providers$CartoDB.Positron) %>%  # providers$Esri.WorldStreetMap
addMarkers(data = utahHealth) %>%
addMarkers(data = utahSchools) %>%
addLayersControl(
overlayGroups = efaAnalysis$group,
options = layersControlOptions(collapsed=FALSE)
)
leaflet(efaAnalysis) %>%
addPolygons(data = efaAnalysis$SHAPE,
fillOpacity = .5,
fillColor = efaAnalysis$color,
color = efaAnalysis$color,
group = efaAnalysis$group,
weight = .8,
popup = paste("Population:", efaAnalysis$Population, "<br>",
"Population Density:", efaAnalysis$PopDens, "<br>",
"Poverty %:", efaAnalysis$PercPovert, "<br>",
"Minority %:", efaAnalysis$PercMinori, "<br>",
"ZeroCar %:", efaAnalysis$PercZeroCa, "<br>",
"Institutionalized Population:", efaAnalysis$IP, "<br>",
"Nursing/Skilled-Nursing Facilities:", efaAnalysis$IP_Nursing, "<br>",
"Noninstitutionalized Population:", efaAnalysis$NIP, "<br>",
"College/University Student Housing:", efaAnalysis$NIP_College))%>%
addProviderTiles(providers$CartoDB.Positron) %>%  # providers$Esri.WorldStreetMap
addMarkers(data = utahHealth) %>%
addMarkers(data = utahSchools) %>%
addLayersControl(
overlayGroups = c(efaAnalysis$group,"schools","health"),
options = layersControlOptions(collapsed=FALSE)
)
View(utahHealth)
leaflet() %>%
addPolygons(data = efaAnalysis$SHAPE,
fillOpacity = .5,
fillColor = efaAnalysis$color,
color = efaAnalysis$color,
group = efaAnalysis$group,
weight = .8,
popup = paste("Population:", efaAnalysis$Population, "<br>",
"Population Density:", efaAnalysis$PopDens, "<br>",
"Poverty %:", efaAnalysis$PercPovert, "<br>",
"Minority %:", efaAnalysis$PercMinori, "<br>",
"ZeroCar %:", efaAnalysis$PercZeroCa, "<br>",
"Institutionalized Population:", efaAnalysis$IP, "<br>",
"Nursing/Skilled-Nursing Facilities:", efaAnalysis$IP_Nursing, "<br>",
"Noninstitutionalized Population:", efaAnalysis$NIP, "<br>",
"College/University Student Housing:", efaAnalysis$NIP_College))%>%
addProviderTiles(providers$CartoDB.Positron) %>%  # providers$Esri.WorldStreetMap
addMarkers(data = utahHealth) %>%
addMarkers(data = utahSchools) %>%
addLayersControl(
overlayGroups = efaAnalysis$group,
options = layersControlOptions(collapsed=FALSE)
)
leaflet() %>%
addPolygons(data = efaAnalysis$SHAPE,
fillOpacity = .5,
fillColor = efaAnalysis$color,
color = efaAnalysis$color,
group = efaAnalysis$group,
weight = .8,
popup = paste("Population:", efaAnalysis$Population, "<br>",
"Population Density:", efaAnalysis$PopDens, "<br>",
"Poverty %:", efaAnalysis$PercPovert, "<br>",
"Minority %:", efaAnalysis$PercMinori, "<br>",
"ZeroCar %:", efaAnalysis$PercZeroCa, "<br>",
"Institutionalized Population:", efaAnalysis$IP, "<br>",
"Nursing/Skilled-Nursing Facilities:", efaAnalysis$IP_Nursing, "<br>",
"Noninstitutionalized Population:", efaAnalysis$NIP, "<br>",
"College/University Student Housing:", efaAnalysis$NIP_College))%>%
addProviderTiles(providers$CartoDB.Positron) %>%  # providers$Esri.WorldStreetMap
addMarkers(data = utahHealth) %>%
addMarkers(data = utahSchools) %>%
addLayersControl(
overlayGroups = group,
options = layersControlOptions(collapsed=FALSE)
)
utahHealth <- st_read("data/Utah_Health_Care_Facilities/HealthCareFacilities.shp") %>%  st_transform(4326) %>%
mutate(intersection = as.integer(st_intersects(geometry, wfrcboundary))) %>% filter(is.na(intersection) == FALSE) %>%
mutate(group = "Health Care Facilities")
utahSchools <- st_read("data/Utah_Schools_Higher_Education/Schools_HigherEducation.shp") %>%  st_transform(4326) %>%
mutate(intersection = as.integer(st_intersects(geometry, wfrcboundary))) %>% filter(is.na(intersection) == FALSE) %>%
mutate(group = "Higher Education Facilities")
leaflet() %>%
addPolygons(data = efaAnalysis$SHAPE,
fillOpacity = .5,
fillColor = efaAnalysis$color,
color = efaAnalysis$color,
group = efaAnalysis$group,
weight = .8,
popup = paste("Population:", efaAnalysis$Population, "<br>",
"Population Density:", efaAnalysis$PopDens, "<br>",
"Poverty %:", efaAnalysis$PercPovert, "<br>",
"Minority %:", efaAnalysis$PercMinori, "<br>",
"ZeroCar %:", efaAnalysis$PercZeroCa, "<br>",
"Institutionalized Population:", efaAnalysis$IP, "<br>",
"Nursing/Skilled-Nursing Facilities:", efaAnalysis$IP_Nursing, "<br>",
"Noninstitutionalized Population:", efaAnalysis$NIP, "<br>",
"College/University Student Housing:", efaAnalysis$NIP_College))%>%
addProviderTiles(providers$CartoDB.Positron) %>%  # providers$Esri.WorldStreetMap
addCircleMarkers(data = utahHealth) %>%
addCircleMarkers(data = utahSchools) %>%
addLayersControl(
overlayGroups = efaAnalysis$group,
options = layersControlOptions(collapsed=FALSE)
)
leaflet() %>%
addPolygons(data = efaAnalysis$SHAPE,
fillOpacity = .5,
fillColor = efaAnalysis$color,
color = efaAnalysis$color,
group = efaAnalysis$group,
weight = .8,
popup = paste("Population:", efaAnalysis$Population, "<br>",
"Population Density:", efaAnalysis$PopDens, "<br>",
"Poverty %:", efaAnalysis$PercPovert, "<br>",
"Minority %:", efaAnalysis$PercMinori, "<br>",
"ZeroCar %:", efaAnalysis$PercZeroCa, "<br>",
"Institutionalized Population:", efaAnalysis$IP, "<br>",
"Nursing/Skilled-Nursing Facilities:", efaAnalysis$IP_Nursing, "<br>",
"Noninstitutionalized Population:", efaAnalysis$NIP, "<br>",
"College/University Student Housing:", efaAnalysis$NIP_College))%>%
addProviderTiles(providers$CartoDB.Positron) %>%  # providers$Esri.WorldStreetMap
addCircleMarkers(data = utahHealth, radius = 2) %>%
addCircleMarkers(data = utahSchools, radius = 2) %>%
addLayersControl(
overlayGroups = efaAnalysis$group,
options = layersControlOptions(collapsed=FALSE)
)
leaflet() %>%
addPolygons(data = efaAnalysis$SHAPE,
fillOpacity = .5,
fillColor = efaAnalysis$color,
color = efaAnalysis$color,
group = efaAnalysis$group,
weight = .8,
popup = paste("Population:", efaAnalysis$Population, "<br>",
"Population Density:", efaAnalysis$PopDens, "<br>",
"Poverty %:", efaAnalysis$PercPovert, "<br>",
"Minority %:", efaAnalysis$PercMinori, "<br>",
"ZeroCar %:", efaAnalysis$PercZeroCa, "<br>",
"Institutionalized Population:", efaAnalysis$IP, "<br>",
"Nursing/Skilled-Nursing Facilities:", efaAnalysis$IP_Nursing, "<br>",
"Noninstitutionalized Population:", efaAnalysis$NIP, "<br>",
"College/University Student Housing:", efaAnalysis$NIP_College))%>%
addProviderTiles(providers$CartoDB.Positron) %>%  # providers$Esri.WorldStreetMap
addCircleMarkers(data = utahHealth, radius = 2, color = "black") %>%
addCircleMarkers(data = utahSchools, radius = 2) %>%
addLayersControl(
overlayGroups = efaAnalysis$group,
options = layersControlOptions(collapsed=FALSE)
)
leaflet() %>%
addPolygons(data = efaAnalysis$SHAPE,
fillOpacity = .5,
fillColor = efaAnalysis$color,
color = efaAnalysis$color,
group = efaAnalysis$group,
weight = .8,
popup = paste("Population:", efaAnalysis$Population, "<br>",
"Population Density:", efaAnalysis$PopDens, "<br>",
"Poverty %:", efaAnalysis$PercPovert, "<br>",
"Minority %:", efaAnalysis$PercMinori, "<br>",
"ZeroCar %:", efaAnalysis$PercZeroCa, "<br>",
"Institutionalized Population:", efaAnalysis$IP, "<br>",
"Nursing/Skilled-Nursing Facilities:", efaAnalysis$IP_Nursing, "<br>",
"Noninstitutionalized Population:", efaAnalysis$NIP, "<br>",
"College/University Student Housing:", efaAnalysis$NIP_College))%>%
addProviderTiles(providers$CartoDB.Positron) %>%  # providers$Esri.WorldStreetMap
addCircleMarkers(data = utahHealth, radius = 2) %>%
addCircleMarkers(data = utahSchools, radius = 2, color = "gray") %>%
addLayersControl(
overlayGroups = efaAnalysis$group,
options = layersControlOptions(collapsed=FALSE)
)
leaflet() %>%
addPolygons(data = efaAnalysis$SHAPE,
fillOpacity = .5,
fillColor = efaAnalysis$color,
color = efaAnalysis$color,
group = efaAnalysis$group,
weight = .8,
popup = paste("Population:", efaAnalysis$Population, "<br>",
"Population Density:", efaAnalysis$PopDens, "<br>",
"Poverty %:", efaAnalysis$PercPovert, "<br>",
"Minority %:", efaAnalysis$PercMinori, "<br>",
"ZeroCar %:", efaAnalysis$PercZeroCa, "<br>",
"Institutionalized Population:", efaAnalysis$IP, "<br>",
"Nursing/Skilled-Nursing Facilities:", efaAnalysis$IP_Nursing, "<br>",
"Noninstitutionalized Population:", efaAnalysis$NIP, "<br>",
"College/University Student Housing:", efaAnalysis$NIP_College))%>%
addProviderTiles(providers$CartoDB.Positron) %>%  # providers$Esri.WorldStreetMap
addCircleMarkers(data = utahHealth, radius = 2) %>%
addCircleMarkers(data = utahSchools, radius = 2, color = "red") %>%
addLayersControl(
overlayGroups = efaAnalysis$group,
options = layersControlOptions(collapsed=FALSE)
)
leaflet() %>%
addPolygons(data = efaAnalysis$SHAPE,
fillOpacity = .5,
fillColor = efaAnalysis$color,
color = efaAnalysis$color,
group = efaAnalysis$group,
weight = .8,
popup = paste("Population:", efaAnalysis$Population, "<br>",
"Population Density:", efaAnalysis$PopDens, "<br>",
"Poverty %:", efaAnalysis$PercPovert, "<br>",
"Minority %:", efaAnalysis$PercMinori, "<br>",
"ZeroCar %:", efaAnalysis$PercZeroCa, "<br>",
"Institutionalized Population:", efaAnalysis$IP, "<br>",
"Nursing/Skilled-Nursing Facilities:", efaAnalysis$IP_Nursing, "<br>",
"Noninstitutionalized Population:", efaAnalysis$NIP, "<br>",
"College/University Student Housing:", efaAnalysis$NIP_College))%>%
addProviderTiles(providers$CartoDB.Positron) %>%  # providers$Esri.WorldStreetMap
addLayersControl(
overlayGroups = efaAnalysis$group,
options = layersControlOptions(collapsed=FALSE)
)
addCircleMarkers(data = utahHealth, radius = 2, group = utahHealth$group) %>%
addCircleMarkers(data = utahSchools, radius = 2, color = "red", group = utahSchools$group) %>%
addLayersControl(
overlayGroups = utahHealth$group,
options = layersControlOptions(collapsed=FALSE)
)
leaflet() %>%
addPolygons(data = efaAnalysis$SHAPE,
fillOpacity = .5,
fillColor = efaAnalysis$color,
color = efaAnalysis$color,
group = efaAnalysis$group,
weight = .8,
popup = paste("Population:", efaAnalysis$Population, "<br>",
"Population Density:", efaAnalysis$PopDens, "<br>",
"Poverty %:", efaAnalysis$PercPovert, "<br>",
"Minority %:", efaAnalysis$PercMinori, "<br>",
"ZeroCar %:", efaAnalysis$PercZeroCa, "<br>",
"Institutionalized Population:", efaAnalysis$IP, "<br>",
"Nursing/Skilled-Nursing Facilities:", efaAnalysis$IP_Nursing, "<br>",
"Noninstitutionalized Population:", efaAnalysis$NIP, "<br>",
"College/University Student Housing:", efaAnalysis$NIP_College))%>%
addProviderTiles(providers$CartoDB.Positron) %>%  # providers$Esri.WorldStreetMap
addCircleMarkers(data = utahHealth, radius = 2, group = utahHealth$group) %>%
addCircleMarkers(data = utahSchools, radius = 2, color = "red", group = utahSchools$group) %>%
addLayersControl(
overlayGroups = c(efaAnalysis$group,utahHealth$group,utahSchools$group),
options = layersControlOptions(collapsed=FALSE)
)
efaAnalysis$group
leaflet() %>%
addPolygons(data = efaAnalysis$SHAPE,
fillOpacity = .5,
fillColor = efaAnalysis$color,
color = efaAnalysis$color,
group = efaAnalysis$group,
weight = .8,
popup = paste("Population:", efaAnalysis$Population, "<br>",
"Population Density:", efaAnalysis$PopDens, "<br>",
"Poverty %:", efaAnalysis$PercPovert, "<br>",
"Minority %:", efaAnalysis$PercMinori, "<br>",
"ZeroCar %:", efaAnalysis$PercZeroCa, "<br>",
"Institutionalized Population:", efaAnalysis$IP, "<br>",
"Nursing/Skilled-Nursing Facilities:", efaAnalysis$IP_Nursing, "<br>",
"Noninstitutionalized Population:", efaAnalysis$NIP, "<br>",
"College/University Student Housing:", efaAnalysis$NIP_College))%>%
addProviderTiles(providers$CartoDB.Positron) %>%  # providers$Esri.WorldStreetMap
addCircleMarkers(data = utahHealth, radius = 2, group = utahHealth$group) %>%
addCircleMarkers(data = utahSchools, radius = 2, color = "red", group = utahSchools$group) %>%
addLayersControl(
overlayGroups = c("2020 Pov-25% Min-40%","2020 Pov-20% Min-40%","2020 Pov-20% Min 40% Veh-10%","2017 Pov-25% Min-40%","2017 Pov-20% Min-40%",utahHealth$group,utahSchools$group),
options = layersControlOptions(collapsed=FALSE)
)
View(utahHealth)
View(utahSchools)
leaflet() %>%
addPolygons(data = efaAnalysis$SHAPE,
fillOpacity = .5,
fillColor = efaAnalysis$color,
color = efaAnalysis$color,
group = efaAnalysis$group,
weight = .8,
popup = paste("Population:", efaAnalysis$Population, "<br>",
"Population Density:", efaAnalysis$PopDens, "<br>",
"Poverty %:", efaAnalysis$PercPovert, "<br>",
"Minority %:", efaAnalysis$PercMinori, "<br>",
"ZeroCar %:", efaAnalysis$PercZeroCa, "<br>",
"Institutionalized Population:", efaAnalysis$IP, "<br>",
"Nursing/Skilled-Nursing Facilities:", efaAnalysis$IP_Nursing, "<br>",
"Noninstitutionalized Population:", efaAnalysis$NIP, "<br>",
"College/University Student Housing:", efaAnalysis$NIP_College))%>%
addProviderTiles(providers$CartoDB.Positron) %>%  # providers$Esri.WorldStreetMap
addCircleMarkers(data = utahHealth,
radius = 2,
group = utahHealth$group,
popup = paste("Name:",utahHealth$NAME, "<br>",
"Type:",utahHealth$TYPE, "<br>",
"City:",utahHealth$CITY)) %>%
addCircleMarkers(data = utahSchools,
radius = 2,
color = "red",
group = utahSchools$group,
popup = paste("Name:", utahSchools$SchoolName, "<br>",
"Type:", utahSchools$SchoolType, "<br>",
"Campus:", utahSchools$CampusType, "<br>",
"City:", utahSchools$City)) %>%
addLayersControl(
overlayGroups = c("2020 Pov-25% Min-40%","2020 Pov-20% Min-40%","2020 Pov-20% Min 40% Veh-10%","2017 Pov-25% Min-40%","2017 Pov-20% Min-40%",utahHealth$group,utahSchools$group),
options = layersControlOptions(collapsed=FALSE)
)
runApp("R/efamap")
runApp("R/efamap")
leaflet() %>%
addPolygons(data = efaAnalysis$SHAPE,
fillOpacity = .5,
fillColor = efaAnalysis$color,
color = efaAnalysis$color,
group = efaAnalysis$group,
weight = .8,
popup = paste("Population:", efaAnalysis$Population, "<br>",
"Population Density:", efaAnalysis$PopDens, "<br>",
"Poverty %:", efaAnalysis$PercPovert, "<br>",
"Minority %:", efaAnalysis$PercMinori, "<br>",
"ZeroCar %:", efaAnalysis$PercZeroCa, "<br>",
"Institutionalized Population:", efaAnalysis$IP, "<br>",
"Nursing/Skilled-Nursing Facilities:", efaAnalysis$IP_Nursing, "<br>",
"Noninstitutionalized Population:", efaAnalysis$NIP, "<br>",
"College/University Student Housing:", efaAnalysis$NIP_College))%>%
addProviderTiles(providers$CartoDB.Positron) %>%  # providers$Esri.WorldStreetMap
addCircleMarkers(data = utahHealth,
radius = 2,
color = "darkgray",
group = utahHealth$group,
popup = paste("Name:",utahHealth$NAME, "<br>",
"Type:",utahHealth$TYPE, "<br>",
"City:",utahHealth$CITY)) %>%
addCircleMarkers(data = utahSchools,
radius = 2,
color = "orange",
group = utahSchools$group,
popup = paste("Name:", utahSchools$SchoolName, "<br>",
"Type:", utahSchools$SchoolType, "<br>",
"Campus:", utahSchools$CampusType, "<br>",
"City:", utahSchools$City)) %>%
addLayersControl(
overlayGroups = c("2020 Pov-25% Min-40%","2020 Pov-20% Min-40%","2020 Pov-20% Min 40% Veh-10%","2017 Pov-25% Min-40%","2017 Pov-20% Min-40%",utahHealth$group,utahSchools$group),
options = layersControlOptions(collapsed=FALSE)
)
leaflet() %>%
addPolygons(data = efaAnalysis$SHAPE,
fillOpacity = .5,
fillColor = efaAnalysis$color,
color = efaAnalysis$color,
group = efaAnalysis$group,
weight = .8,
popup = paste("Population:", efaAnalysis$Population, "<br>",
"Population Density:", efaAnalysis$PopDens, "<br>",
"Poverty %:", efaAnalysis$PercPovert, "<br>",
"Minority %:", efaAnalysis$PercMinori, "<br>",
"ZeroCar %:", efaAnalysis$PercZeroCa, "<br>",
"Institutionalized Population:", efaAnalysis$IP, "<br>",
"Nursing/Skilled-Nursing Facilities:", efaAnalysis$IP_Nursing, "<br>",
"Noninstitutionalized Population:", efaAnalysis$NIP, "<br>",
"College/University Student Housing:", efaAnalysis$NIP_College))%>%
addProviderTiles(providers$CartoDB.Positron) %>%  # providers$Esri.WorldStreetMap
addCircleMarkers(data = utahHealth,
radius = 2,
color = "purple",
group = utahHealth$group,
popup = paste("Name:",utahHealth$NAME, "<br>",
"Type:",utahHealth$TYPE, "<br>",
"City:",utahHealth$CITY)) %>%
addCircleMarkers(data = utahSchools,
radius = 2,
color = "orange",
group = utahSchools$group,
popup = paste("Name:", utahSchools$SchoolName, "<br>",
"Type:", utahSchools$SchoolType, "<br>",
"Campus:", utahSchools$CampusType, "<br>",
"City:", utahSchools$City)) %>%
addLayersControl(
overlayGroups = c("2020 Pov-25% Min-40%","2020 Pov-20% Min-40%","2020 Pov-20% Min 40% Veh-10%","2017 Pov-25% Min-40%","2017 Pov-20% Min-40%",utahHealth$group,utahSchools$group),
options = layersControlOptions(collapsed=FALSE)
)
leaflet() %>%
addPolygons(data = efaAnalysis$SHAPE,
fillOpacity = .5,
fillColor = efaAnalysis$color,
color = efaAnalysis$color,
group = efaAnalysis$group,
weight = .8,
popup = paste("Population:", efaAnalysis$Population, "<br>",
"Population Density:", efaAnalysis$PopDens, "<br>",
"Poverty %:", efaAnalysis$PercPovert, "<br>",
"Minority %:", efaAnalysis$PercMinori, "<br>",
"ZeroCar %:", efaAnalysis$PercZeroCa, "<br>",
"Institutionalized Population:", efaAnalysis$IP, "<br>",
"Nursing/Skilled-Nursing Facilities:", efaAnalysis$IP_Nursing, "<br>",
"Noninstitutionalized Population:", efaAnalysis$NIP, "<br>",
"College/University Student Housing:", efaAnalysis$NIP_College))%>%
addProviderTiles(providers$CartoDB.Positron) %>%  # providers$Esri.WorldStreetMap
addCircleMarkers(data = utahHealth,
radius = 2,
color = "orange",
group = utahHealth$group,
popup = paste("Name:",utahHealth$NAME, "<br>",
"Type:",utahHealth$TYPE, "<br>",
"City:",utahHealth$CITY)) %>%
addCircleMarkers(data = utahSchools,
radius = 2,
color = "black",
group = utahSchools$group,
popup = paste("Name:", utahSchools$SchoolName, "<br>",
"Type:", utahSchools$SchoolType, "<br>",
"Campus:", utahSchools$CampusType, "<br>",
"City:", utahSchools$City)) %>%
addLayersControl(
overlayGroups = c("2020 Pov-25% Min-40%","2020 Pov-20% Min-40%","2020 Pov-20% Min 40% Veh-10%","2017 Pov-25% Min-40%","2017 Pov-20% Min-40%",utahHealth$group,utahSchools$group),
options = layersControlOptions(collapsed=FALSE)
)
runApp("R/efamap")
rsconnect::deployApp("R/efamap")
#' needed libraries
library(tidyverse)
library(sf)
library(mapview)
library(stringi)
#' read in original shapefile
tip_project_lines <- st_read("//server1/volumeg/Data/Observatory/Transportation/TIP/TIP2023_2028/TIPProjects_map.gdb", layer = "TIP_Projects_lines")
#' read in original shapefile
tip_project_lines <- st_read("//server1/volumeg/Data/Observatory/Transportation/TIP/TIP2023_2028/TIPProjects_map.gdb", layer = "TIP_Projects_lines")
tip_project_points <- st_read("//server1/volumeg/Data/Observatory/Transportation/TIP/TIP2023_2028/TIPProjects_map.gdb", layer = "TIP_Projects_points")
## LINES -----------------------------------------------------------------------------------------------------------------------------------------------------#
#' generate centroid coordinates for each line
#' use centroid coordinates and basic google street-view link to concatenate an
#'   html string of the street-view location of the centroid
tip_lines_centroids <- tip_project_lines %>%
mutate(Shape = st_transform(Shape,st_crs(4326))) %>%
mutate(midlinep = st_point_on_surface(Shape)) %>% #instead of st_centroid use st_point_on_surface
mutate(midlinep_txt = st_as_text(midlinep)) %>%
mutate(midlinep_str = substring(midlinep_txt,8)) %>%
mutate(longm = gsub( " .*$", "", midlinep_str),
latm = gsub('.)$', '',sub(".*? ", "",midlinep_str))) %>%
mutate(basic_streetview = paste("http://maps.google.com/maps?q=&layer=c&cbll=",latm,",",longm,"&cbp=11,0,0,0,0",sep="")) %>%
select(-midlinep_txt,-midlinep_str,-longm,-latm)
tip_lines_centroids2 <- tip_lines_centroids[,c(1,2,3,4,5,6,7,8,9,10,11,13,12,14)]
#' write new shapefile for lines data
st_write(tip_lines_centroids2, dsn = "outputs/results/TIP_Projects_Stretview.gpkg", layer = "basiclinks.shp", append=TRUE)
#' write new shapefile for lines data
st_write(tip_lines_centroids2, dsn = "outputs/results/TIP_Projects_Stretview.gpkg", layer = "basiclinks", append=TRUE)
## POINTS ----------------------------------------------------------------------------------------------------------------------------------------------------#
#' use point coordinates to concatenate an html string of the street-view location
tip_nodes <- tip_project_points %>%
mutate(Shape = st_transform(Shape,st_crs(4326))) %>%
mutate(centroid_txt = st_as_text(Shape)) %>%
mutate(centroid_str = substring(centroid_txt,8)) %>%
mutate(long = gsub( " .*$", "", centroid_str),
lat = gsub('.)$', '',sub(".*? ", "",centroid_str))) %>%
mutate(basic_streetview = paste("http://maps.google.com/maps?q=&layer=c&cbll=",lat,",",long,"&cbp=11,0,0,0,0",sep="")) %>%
select(-centroid_txt,-centroid_str,-long,-lat)
#' write new shapefile for points data
st_write(tip_nodes, dsn = "outputs/results/shapefiles/TIP_Projects_Stretview.gpkg", layer = "basicnodes", append=TRUE)
#' write new shapefile for points data
st_write(tip_nodes, dsn = "outputs/results/shapefiles/TIP_Projects_Stretview.gpkg", layer = "basicnodes", append=TRUE)
#' write new shapefile for points data
st_write(tip_nodes, dsn = "outputs/results/TIP_Projects_Stretview.gpkg", layer = "basicnodes", append=TRUE)
