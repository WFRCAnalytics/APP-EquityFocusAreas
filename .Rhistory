# View in Maps-------------------------------------------------------------------------------------------------------------------------------------------------------------#
plot_comparison_map <- function(){
leaflet(height = "100%", width = "100%") %>%
setView(lng = -73.98928, lat = 40.75042, zoom = 10) %>%
addPolygons(data = efaPerc2020Pov20NoCarshp$SHAPE, fillColor = "red",fillOpacity = 1, color = "black", weight = .8, group = "2020 Pov-20% Min-40%") %>%
addPolygons(data = efaPerc2020Pov25NoCarshp$SHAPE, fillColor = "blue",fillOpacity = 1, color = "black",weight = .8, group = "2020 Pov-25% Min-40%") %>%
addPolygons(data = efaPerc2020Pov20Carshp$SHAPE, fillColor = "green", fillOpacity = 1, color = "black",weight = .8, group = "2020 Pov-20% Min 40% Veh-10%") %>%
addPolygons(data = efaPerc2017Pov20NoCarshp$geometry, fillColor = "yellow", fillOpacity = 1, color = "black",weight = .8, group = "2017 Pov-20% Min-40%") %>%
addPolygons(data = efaPerc2017Pov25NoCarshp$geometry, fillColor = "pink", fillOpacity = 1, color = "black",weight = .8, group = "2017 Pov-25% MIn-40%") %>%
addProviderTiles(providers$CartoDB.Positron) %>% # providers$Esri.WorldStreetMap
addLayersControl(
overlayGroups =c("2020 Pov-20% Min-40%", "2020 Pov-25% Min-40%","2020 Pov-20% Min 40% Veh-10%","2017 Pov-20% Min-40%","2017 Pov-25% MIn-40%"),
options = layersControlOptions(collapsed=FALSE)
)
}
plot_comparison_map()
# View in Maps-------------------------------------------------------------------------------------------------------------------------------------------------------------#
plot_comparison_map <- function(){
leaflet(height = "100%", width = "100%") %>%
#setView(lng = -73.98928, lat = 40.75042, zoom = 10) %>%
addPolygons(data = efaPerc2020Pov20NoCarshp$SHAPE, fillColor = "red",fillOpacity = 1, color = "black", weight = .8, group = "2020 Pov-20% Min-40%") %>%
addPolygons(data = efaPerc2020Pov25NoCarshp$SHAPE, fillColor = "blue",fillOpacity = 1, color = "black",weight = .8, group = "2020 Pov-25% Min-40%") %>%
addPolygons(data = efaPerc2020Pov20Carshp$SHAPE, fillColor = "green", fillOpacity = 1, color = "black",weight = .8, group = "2020 Pov-20% Min 40% Veh-10%") %>%
addPolygons(data = efaPerc2017Pov20NoCarshp$geometry, fillColor = "yellow", fillOpacity = 1, color = "black",weight = .8, group = "2017 Pov-20% Min-40%") %>%
addPolygons(data = efaPerc2017Pov25NoCarshp$geometry, fillColor = "pink", fillOpacity = 1, color = "black",weight = .8, group = "2017 Pov-25% MIn-40%") %>%
addProviderTiles(providers$CartoDB.Positron) %>% # providers$Esri.WorldStreetMap
addLayersControl(
overlayGroups =c("2020 Pov-20% Min-40%", "2020 Pov-25% Min-40%","2020 Pov-20% Min 40% Veh-10%","2017 Pov-20% Min-40%","2017 Pov-25% MIn-40%"),
options = layersControlOptions(collapsed=FALSE)
)
}
plot_comparison_map()
runApp("R/efamap")
source("R/efamap/efa_analysis_2020.R")
runApp("R/efamap")
runApp("R/efamap")
runApp("R/efamap")
runApp("R/efamap")
runApp("R/efamap")
runApp("R/efamap")
runApp("R/efamap")
runApp("R/efamap")
runApp("R/efamap")
#Create EFA GeoPackage for Secondary Analysis-------------------------------------------------------------------------------------------------------------------------------------------------------------#
#' create more spatial options where we adjust slightly the percentage calculation by using a poverty threshold of 20% instead of 25%
efaPerc2020Pov25NoCarshp <- efa2020shp %>% filter(HighestPerc25woCar > 0) %>%
delete_low_pop_dens() %>%
mutate(group = "2020 Pov-25% Min-40%")
leaflet(height = "100%", width = "100%") %>%
addPolygons(data = efaPerc2020Pov20NoCarshp$SHAPE, fillColor = "red",fillOpacity = 1, color = "black", weight = .8, group = "2020 Pov-20% Min-40%") %>%
addPolygons(data = efaPerc2020Pov25NoCarshp$SHAPE, fillColor = "blue",fillOpacity = 1, color = "black",weight = .8, group = efaPerc2020Pov25NoCarshp$group) %>%
addPolygons(data = efaPerc2020Pov20Carshp$SHAPE, fillColor = "green", fillOpacity = 1, color = "black",weight = .8, group = "2020 Pov-20% Min 40% Veh-10%") %>%
addPolygons(data = efaPerc2017Pov20NoCarshp$geometry, fillColor = "yellow", fillOpacity = 1, color = "black",weight = .8, group = "2017 Pov-20% Min-40%") %>%
addPolygons(data = efaPerc2017Pov25NoCarshp$geometry, fillColor = "pink", fillOpacity = 1, color = "black",weight = .8, group = "2017 Pov-25% MIn-40%") %>%
addProviderTiles(providers$CartoDB.Positron) %>% # providers$Esri.WorldStreetMap
addLayersControl(
overlayGroups =c("2020 Pov-20% Min-40%", "2020 Pov-25% Min-40%","2020 Pov-20% Min 40% Veh-10%","2017 Pov-20% Min-40%","2017 Pov-25% MIn-40%"),
options = layersControlOptions(collapsed=FALSE)
)
plot_comparison_map()
runApp("R/efamap")
runApp("R/efamap")
#Create EFA GeoPackage for Secondary Analysis-------------------------------------------------------------------------------------------------------------------------------------------------------------#
#' create more spatial options where we adjust slightly the percentage calculation by using a poverty threshold of 20% instead of 25%
efaPerc2020Pov25NoCarshp <- efa2020shp %>% filter(HighestPerc25woCar > 0) %>%
delete_low_pop_dens() %>% mutate(group = "2020 Pov-25% Min-40%")
efaPerc2020Pov20NoCarshp<- efa2020shp %>% filter(HighestPerc20woCar > 0) %>%
delete_low_pop_dens() %>% mutate(group = "2020 Pov-20% Min-40%")
efaPerc2020Pov20Carshp <- efa2020shp %>% filter(HighestPerc20wCar > 0) %>%
delete_low_pop_dens() %>% mutate(group = "2020 Pov-20% Min 40% Veh-10%")
#Create EFA GeoPackage for Secondary Analysis-------------------------------------------------------------------------------------------------------------------------------------------------------------#
#' create more spatial options where we adjust slightly the percentage calculation by using a poverty threshold of 20% instead of 25%
efaPerc2020Pov25NoCarshp <- efa2020shp %>% filter(HighestPerc25woCar > 0) %>%
delete_low_pop_dens() %>% mutate(group = "2020 Pov-25% Min-40%")
efaPerc2020Pov20NoCarshp<- efa2020shp %>% filter(HighestPerc20woCar > 0) %>%
delete_low_pop_dens() %>% mutate(group = "2020 Pov-20% Min-40%")
efaPerc2020Pov20Carshp <- efa2020shp %>% filter(HighestPerc20wCar > 0) %>%
delete_low_pop_dens() %>% mutate(group = "2020 Pov-20% Min 40% Veh-10%")
efaPerc2017shp <- efashp2017 %>%  mutate(Perc_Pov25 = ifelse(PercPovert > 0.25,1,0), Perc_Pov20 = ifelse(PercPovert > 0.2,1,0)) %>%
mutate(HighestPerc25woCar = pmax(Perc_Pov25,SD_Minorit), HighestPerc20woCar = pmax(Perc_Pov20,SD_Minorit))
efaPerc2017Pov25NoCarshp <- efaPerc2017shp %>% filter(HighestPerc25woCar > 0) %>% mutate(group = "2017 Pov-25% Min-40%")
efaPerc2017Pov20NoCarshp<- efaPerc2017shp %>% filter(HighestPerc20woCar > 0) %>% mutate(group = "2017 Pov-20% Min-40%")
efaAnalysis <- bind_rows(list(efaPerc2020Pov25NoCarshp,efaPerc2020Pov20NoCarshp,efaPerc2020Pov20Carshp,efaPerc2017Pov25NoCarshp,efaPerc2017Pov20NoCarshp))
View(efaPerc2017Pov20NoCarshp)
efaPerc2017Pov25NoCarshp[6,9,12,13] = lapply(efaPerc2017Pov25NoCarshp[6,9,12,13], FUN = function(y){as.numeric(y)})
efaPerc2017Pov25NoCarshp[c(6,9,12,13)] = lapply(efaPerc2017Pov25NoCarshp[c(6,9,12,13)], FUN = function(y){as.numeric(y)})
efaPerc2017shp <- efashp2017 %>%  mutate(Perc_Pov25 = ifelse(PercPovert > 0.25,1,0), Perc_Pov20 = ifelse(PercPovert > 0.2,1,0)) %>%
mutate(HighestPerc25woCar = pmax(Perc_Pov25,SD_Minorit), HighestPerc20woCar = pmax(Perc_Pov20,SD_Minorit)) %>%
mutate(SD_Pov = as.numeric(SD_Pov),SD_Minorit = as.numeric(SD_Minorit),SD_ZeroCar = as.numeric(SD_ZeroCar),HighestStD = as.numeric(HighestStD))
efaPerc2017Pov25NoCarshp <- efaPerc2017shp %>% filter(HighestPerc25woCar > 0) %>% mutate(group = "2017 Pov-25% Min-40%")
efaPerc2017Pov20NoCarshp<- efaPerc2017shp %>% filter(HighestPerc20woCar > 0) %>% mutate(group = "2017 Pov-20% Min-40%")
efaAnalysis <- bind_rows(list(efaPerc2020Pov25NoCarshp,efaPerc2020Pov20NoCarshp,efaPerc2020Pov20Carshp,efaPerc2017Pov25NoCarshp,efaPerc2017Pov20NoCarshp))
#Create EFA GeoPackage for Secondary Analysis-------------------------------------------------------------------------------------------------------------------------------------------------------------#
#' create more spatial options where we adjust slightly the percentage calculation by using a poverty threshold of 20% instead of 25%
efaPerc2020Pov25NoCarshp <- efa2020shp %>% filter(HighestPerc25woCar > 0) %>%
delete_low_pop_dens() %>% mutate(group = "2020 Pov-25% Min-40%")
efaPerc2020Pov20NoCarshp<- efa2020shp %>% filter(HighestPerc20woCar > 0) %>%
delete_low_pop_dens() %>% mutate(group = "2020 Pov-20% Min-40%")
mutate(HighestPerc25woCar = pmax(Perc_Pov25,SD_Minorit), HighestPerc20woCar = pmax(Perc_Pov20,SD_Minorit))
#Create EFA GeoPackage for Secondary Analysis-------------------------------------------------------------------------------------------------------------------------------------------------------------#
#' create more spatial options where we adjust slightly the percentage calculation by using a poverty threshold of 20% instead of 25%
efaPerc2020Pov25NoCarshp <- efa2020shp %>% filter(HighestPerc25woCar > 0) %>%
delete_low_pop_dens() %>% mutate(group = "2020 Pov-25% Min-40%")
efaPerc2020Pov20NoCarshp<- efa2020shp %>% filter(HighestPerc20woCar > 0) %>%
delete_low_pop_dens() %>% mutate(group = "2020 Pov-20% Min-40%")
efaPerc2020Pov20Carshp <- efa2020shp %>% filter(HighestPerc20wCar > 0) %>%
delete_low_pop_dens() %>% mutate(group = "2020 Pov-20% Min 40% Veh-10%")
efaPerc2017shp <- efashp2017 %>%  mutate(Perc_Pov25 = ifelse(PercPovert > 0.25,1,0), Perc_Pov20 = ifelse(PercPovert > 0.2,1,0)) %>%
mutate(SD_Pov = as.numeric(SD_Pov),SD_Minorit = as.numeric(SD_Minorit),SD_ZeroCar = as.numeric(SD_ZeroCar),HighestStD = as.numeric(HighestStD))
efaPerc2017shp <- efashp2017 %>%  mutate(Perc_Pov25 = ifelse(PercPovert > 0.25,1,0), Perc_Pov20 = ifelse(PercPovert > 0.2,1,0)) %>%
mutate(SD_Pov = as.numeric(SD_Pov),SD_Minorit = as.numeric(SD_Minorit),SD_ZeroCar = as.numeric(SD_ZeroCar),HighestStD = as.numeric(HighestStD)) %>%
mutate(HighestPerc25woCar = pmax(Perc_Pov25,SD_Minorit), HighestPerc20woCar = pmax(Perc_Pov20,SD_Minorit))
efaPerc2017Pov25NoCarshp <- efaPerc2017shp %>% filter(HighestPerc25woCar > 0) %>% mutate(group = "2017 Pov-25% Min-40%")
efaPerc2017Pov20NoCarshp<- efaPerc2017shp %>% filter(HighestPerc20woCar > 0) %>% mutate(group = "2017 Pov-20% Min-40%")
efaAnalysis <- bind_rows(list(efaPerc2020Pov25NoCarshp,efaPerc2020Pov20NoCarshp,efaPerc2020Pov20Carshp,efaPerc2017Pov25NoCarshp,efaPerc2017Pov20NoCarshp))
View(efaAnalysis)
efaPerc2017shp <- efashp2017 %>%  mutate(Perc_Pov25 = ifelse(PercPovert > 0.25,1,0), Perc_Pov20 = ifelse(PercPovert > 0.2,1,0)) %>%
mutate(SD_Pov = as.numeric(SD_Pov),SD_Minorit = as.numeric(SD_Minorit),SD_ZeroCar = as.numeric(SD_ZeroCar),HighestStD = as.numeric(HighestStD)) %>%
mutate(HighestPerc25woCar = pmax(Perc_Pov25,SD_Minorit), HighestPerc20woCar = pmax(Perc_Pov20,SD_Minorit)) %>%
mutate(SHAPE = geometry)
efaPerc2017Pov25NoCarshp <- efaPerc2017shp %>% filter(HighestPerc25woCar > 0) %>% mutate(group = "2017 Pov-25% Min-40%")
efaPerc2017Pov20NoCarshp<- efaPerc2017shp %>% filter(HighestPerc20woCar > 0) %>% mutate(group = "2017 Pov-20% Min-40%")
efaAnalysis <- bind_rows(list(efaPerc2020Pov25NoCarshp,efaPerc2020Pov20NoCarshp,efaPerc2020Pov20Carshp,efaPerc2017Pov25NoCarshp,efaPerc2017Pov20NoCarshp))
View(efaAnalysis)
leaflet() %>%
addPolygons(data = efaAnalysis$SHAPE, fillColor = "red",fillOpacity = 1, color = "black", weight = .8, group = group) %>%
addProviderTiles(providers$CartoDB.Positron) %>% # providers$Esri.WorldStreetMap
addLayersControl(
overlayGroups =c("2020 Pov-20% Min-40%", "2020 Pov-25% Min-40%","2020 Pov-20% Min 40% Veh-10%","2017 Pov-20% Min-40%","2017 Pov-25% MIn-40%"),
options = layersControlOptions(collapsed=FALSE)
)
leaflet() %>%
addPolygons(data = efaAnalysis$SHAPE, fillColor = "red",fillOpacity = 1, color = efaAnalysis$group, weight = .8, group = efaAnalysis$group) %>%
addProviderTiles(providers$CartoDB.Positron) %>% # providers$Esri.WorldStreetMap
addLayersControl(
overlayGroups =c("2020 Pov-20% Min-40%", "2020 Pov-25% Min-40%","2020 Pov-20% Min 40% Veh-10%","2017 Pov-20% Min-40%","2017 Pov-25% MIn-40%"),
options = layersControlOptions(collapsed=FALSE)
)
# View in Maps-------------------------------------------------------------------------------------------------------------------------------------------------------------#
pal <- colorFactor(
palette = c('red', 'blue', 'green', 'purple', 'orange'),
domain = efaAnalysis$group
)
leaflet() %>%
addPolygons(data = efaAnalysis$SHAPE, fillColor = pal,fillOpacity = 1, color = pal, weight = .8, group = efaAnalysis$group) %>%
addProviderTiles(providers$CartoDB.Positron) %>% # providers$Esri.WorldStreetMap
addLayersControl(
overlayGroups =c("2020 Pov-20% Min-40%", "2020 Pov-25% Min-40%","2020 Pov-20% Min 40% Veh-10%","2017 Pov-20% Min-40%","2017 Pov-25% MIn-40%"),
options = layersControlOptions(collapsed=FALSE)
)
plot_comparison_map <- function(){
leaflet() %>%
addPolygons(data = efaAnalysis$SHAPE, fillColor = ~pal(group),fillOpacity = 1, color = ~pal(group), weight = .8, group = efaAnalysis$group) %>%
addProviderTiles(providers$CartoDB.Positron) %>% # providers$Esri.WorldStreetMap
addLayersControl(
overlayGroups =c("2020 Pov-20% Min-40%", "2020 Pov-25% Min-40%","2020 Pov-20% Min 40% Veh-10%","2017 Pov-20% Min-40%","2017 Pov-25% MIn-40%"),
options = layersControlOptions(collapsed=FALSE)
)
leaflet() %>%
addPolygons(data = efaAnalysis$SHAPE, fillColor = ~pal(group),fillOpacity = 1, color = ~pal(group), weight = .8, group = efaAnalysis$group) %>%
addProviderTiles(providers$CartoDB.Positron) %>% # providers$Esri.WorldStreetMap
addLayersControl(
overlayGroups =c("2020 Pov-20% Min-40%", "2020 Pov-25% Min-40%","2020 Pov-20% Min 40% Veh-10%","2017 Pov-20% Min-40%","2017 Pov-25% MIn-40%"),
options = layersControlOptions(collapsed=FALSE)
)
leaflet() %>%
addPolygons(data = efaAnalysis$SHAPE, fillColor = ~pal(group),fillOpacity = 1, color = ~pal(group), weight = .8, group = efaAnalysis$group) %>%
addProviderTiles(providers$CartoDB.Positron)
leaflet() %>%
addPolygons(data = efaAnalysis$SHAPE,fillOpacity = 1, color = ~pal(group), weight = .8, group = efaAnalysis$group) %>%
addProviderTiles(providers$CartoDB.Positron) %>% # providers$Esri.WorldStreetMap
addLayersControl(
overlayGroups =c("2020 Pov-20% Min-40%", "2020 Pov-25% Min-40%","2020 Pov-20% Min 40% Veh-10%","2017 Pov-20% Min-40%","2017 Pov-25% MIn-40%"),
options = layersControlOptions(collapsed=FALSE)
)
leaflet() %>%
addPolygons(data = efaAnalysis$SHAPE,fillOpacity = 1, color = ~pal(group), weight = .8) %>%
addProviderTiles(providers$CartoDB.Positron)
# View in Maps-------------------------------------------------------------------------------------------------------------------------------------------------------------#
pal <- colorFactor(
palette = c('red', 'blue', 'green', 'purple', 'orange'),
domain = efaAnalysis$group
)
leaflet() %>%
addPolygons(data = efaAnalysis$SHAPE,fillOpacity = 1, color = ~pal(group), weight = .8) %>%
addProviderTiles(providers$CartoDB.Positron)
View(efaAnalysis)
leaflet() %>%
addPolygons(data = efaAnalysis$SHAPE,fillOpacity = 1, popup = ~group, color = ~pal(group), weight = .8) %>%
addProviderTiles(providers$CartoDB.Positron) %>% # providers$Esri.WorldStreetMap
addLayersControl(
overlayGroups =c("2020 Pov-20% Min-40%", "2020 Pov-25% Min-40%","2020 Pov-20% Min 40% Veh-10%","2017 Pov-20% Min-40%","2017 Pov-25% MIn-40%"),
options = layersControlOptions(collapsed=FALSE)
)
efaAnalysis <- bind_rows(list(efaPerc2020Pov25NoCarshp,efaPerc2020Pov20NoCarshp,efaPerc2020Pov20Carshp,efaPerc2017Pov25NoCarshp,efaPerc2017Pov20NoCarshp)) %>%
mutate(group = as.factor(group))
efaAnalysis <- bind_rows(list(efaPerc2020Pov25NoCarshp,efaPerc2020Pov20NoCarshp,efaPerc2020Pov20Carshp,efaPerc2017Pov25NoCarshp,efaPerc2017Pov20NoCarshp)) %>%
mutate(group = as.factor(group))
leaflet() %>%
addPolygons(data = efaAnalysis$SHAPE,fillOpacity = 1, popup = ~group, color = ~pal(group), weight = .8) %>%
addProviderTiles(providers$CartoDB.Positron) %>% # providers$Esri.WorldStreetMap
addLayersControl(
overlayGroups =c("2020 Pov-20% Min-40%", "2020 Pov-25% Min-40%","2020 Pov-20% Min 40% Veh-10%","2017 Pov-20% Min-40%","2017 Pov-25% MIn-40%"),
options = layersControlOptions(collapsed=FALSE)
)
leaflet() %>%
addPolygons(data = efaAnalysis$SHAPE,fillOpacity = 1, popup = ~group, color = ~pal(group), weight = .8) %>%
addProviderTiles(providers$CartoDB.Positron)
leaflet(efaAnalysis) %>%
addPolygons(data = SHAPE,fillOpacity = 1, popup = ~group, color = ~pal(group), weight = .8) %>%
addProviderTiles(providers$CartoDB.Positron)
leaflet(efaAnalysis) %>%
addPolygons(data = SHAPE,fillOpacity = 1, popup = ~group, color = ~pal(group), weight = .8) %>%
addProviderTiles(providers$CartoDB.Positron)
leaflet(efaAnalysis) %>%
addPolygons(data = SHAPE,fillOpacity = 1, popup = ~group, color = ~pal(group), weight = .8) %>%
addProviderTiles(providers$CartoDB.Positron)
leaflet(efaAnalysis) %>%
addPolygons(data = SHAPE,fillOpacity = 1, popup = ~group, color = ~pal(group), weight = .8) %>%
addProviderTiles(providers$CartoDB.Positron)
leaflet(efaAnalysis) %>%
addPolygons(data = SHAPE,fillOpacity = 1, popup = ~group, color = ~pal(group), weight = .8) %>%
addProviderTiles(providers$CartoDB.Positron)
leaflet(efaAnalysis) %>%
addPolygons(data = SHAPE,fillOpacity = 1, popup = ~group, color = ~pal(group), weight = .8) %>%
addProviderTiles(providers$CartoDB.Positron)
leaflet(efaAnalysis) %>%
addPolygons(data = SHAPE,fillOpacity = 1, popup = ~group, color = ~pal(group), weight = .8) %>%
addProviderTiles(providers$CartoDB.Positron)
leaflet(efaAnalysis) %>%
addPolygons(data = SHAPE,fillOpacity = 1, popup = ~group, color = ~pal(group), weight = .8) %>%
addProviderTiles(providers$CartoDB.Positron)
leaflet(efaAnalysis) %>%
addPolygons(data = SHAPE,fillOpacity = 1, popup = ~group, color = ~pal(group), weight = .8) %>%
addProviderTiles(providers$CartoDB.Positron)
leaflet(efaAnalysis) %>%
addPolygons(data = SHAPE,fillOpacity = 1, popup = ~group, color = ~pal(group), weight = .8) %>%
addProviderTiles(providers$CartoDB.Positron)
leaflet(efaAnalysis) %>%
addPolygons(data = SHAPE,fillOpacity = 1, popup = ~group, color = ~pal(group), weight = .8) %>%
addProviderTiles(providers$CartoDB.Positron)
leaflet(efaAnalysis) %>%
addPolygons(data = SHAPE,fillOpacity = 1, popup = ~group, color = ~pal(group), weight = .8) %>%
addProviderTiles(providers$CartoDB.Positron)
leaflet(efaAnalysis) %>%
addPolygons(data = SHAPE,fillOpacity = 1, popup = ~group, color = ~pal(group), weight = .8) %>%
addProviderTiles(providers$CartoDB.Positron)
# View in Maps-------------------------------------------------------------------------------------------------------------------------------------------------------------#
pal <- colorFactor(
palette = c('red', 'blue', 'green', 'purple', 'orange'),
domain = efaAnalysis$group
)
leaflet() %>%
addPolygons(data = efaAnalysis$SHAPE,fillOpacity = 1, popup = ~group, color = ~pal(group), weight = .8) %>%
addProviderTiles(providers$CartoDB.Positron)
leaflet(efaAnalysis) %>%
addPolygons(data = SHAPE,fillOpacity = 1, popup = ~group, color = ~pal(group), weight = .8) %>%
addProviderTiles(providers$CartoDB.Positron)
leaflet(efaAnalysis) %>%
addPolygons(data = SHAPE,fillOpacity = 1, popup = ~group, color = ~pal(group), weight = .8) %>%
addProviderTiles(providers$CartoDB.Positron)
leaflet(efaAnalysis) %>%
addPolygons(data = SHAPE,fillOpacity = 1, popup = ~group, color = ~pal(group), weight = .8) %>%
addProviderTiles(providers$CartoDB.Positron)
View(efaAnalysis)
# View in Maps-------------------------------------------------------------------------------------------------------------------------------------------------------------#
pal <- colorFactor(
palette = c('red', 'blue', 'green', 'purple', 'orange'),
domain = efaAnalysis$group
)
leaflet(efaAnalysis) %>%
addPolygons(data = SHAPE,fillOpacity = 1, color = ~pal(group), weight = .8) %>%
addProviderTiles(providers$CartoDB.Positron)
leaflet() %>%
addPolygons(data = efaAnalysis$SHAPE,fillOpacity = 1, color = ~pal(group), weight = .8) %>%
addProviderTiles(providers$CartoDB.Positron)
leaflet() %>%
addPolygons(data = efaAnalysis$SHAPE,fillOpacity = 1, color = black, weight = .8) %>%
addProviderTiles(providers$CartoDB.Positron)
leaflet() %>%
addPolygons(data = efaAnalysis$SHAPE,fillOpacity = 1, color = "black", weight = .8) %>%
addProviderTiles(providers$CartoDB.Positron)
leaflet() %>%
addPolygons(data = efaAnalysis$SHAPE,fillOpacity = 1, color = "black", weight = .8) %>%
addProviderTiles(providers$CartoDB.Positron) %>% # providers$Esri.WorldStreetMap
addLayersControl(
overlayGroups =groups,
options = layersControlOptions(collapsed=FALSE)
)
leaflet() %>%
addPolygons(data = efaAnalysis$SHAPE,fillOpacity = 1, color = "black", weight = .8) %>%
addProviderTiles(providers$CartoDB.Positron) %>% # providers$Esri.WorldStreetMap
addLayersControl(
overlayGroups =efaAnalysis$groups,
options = layersControlOptions(collapsed=FALSE)
)
leaflet() %>%
addPolygons(data = efaAnalysis$SHAPE,fillOpacity = 1, color = "black", weight = .8) %>%
addProviderTiles(providers$CartoDB.Positron) %>% # providers$Esri.WorldStreetMap
addLayersControl(
overlayGroups = ~efaAnalysis$groups,
options = layersControlOptions(collapsed=FALSE)
)
leaflet() %>%
addPolygons(data = efaAnalysis$SHAPE,fillOpacity = 1, color = "black", weight = .8) %>%
addProviderTiles(providers$CartoDB.Positron) %>% # providers$Esri.WorldStreetMap
addLayersControl(
overlayGroups = ~efaAnalysis$groups,
options = layersControlOptions(collapsed=FALSE)
)
leaflet() %>%
addPolygons(data = efaAnalysis$SHAPE,fillOpacity = 1, color = "black", weight = .8) %>%
addProviderTiles(providers$CartoDB.Positron) %>% # providers$Esri.WorldStreetMap
addLayersControl(
overlayGroups = groups,
options = layersControlOptions(collapsed=FALSE)
)
leaflet() %>%
addPolygons(data = efaAnalysis$SHAPE,fillOpacity = 1, color = "black", weight = .8) %>%
addProviderTiles(providers$CartoDB.Positron) %>% # providers$Esri.WorldStreetMap
addLayersControl(
overlayGroups =c("2020 Pov-20% Min-40%", "2020 Pov-25% Min-40%","2020 Pov-20% Min 40% Veh-10%","2017 Pov-20% Min-40%","2017 Pov-25% MIn-40%"),
options = layersControlOptions(collapsed=FALSE)
)
leaflet() %>%
addPolygons(data = efaAnalysis$SHAPE,fillOpacity = 1, color = pal, weight = .8) %>%
addProviderTiles(providers$CartoDB.Positron) %>% # providers$Esri.WorldStreetMap
addLayersControl(
overlayGroups =c("2020 Pov-20% Min-40%", "2020 Pov-25% Min-40%","2020 Pov-20% Min 40% Veh-10%","2017 Pov-20% Min-40%","2017 Pov-25% MIn-40%"),
options = layersControlOptions(collapsed=FALSE)
)
# View in Maps-------------------------------------------------------------------------------------------------------------------------------------------------------------#
pal <- colorFactor(
palette = c('red', 'blue', 'green', 'purple', 'orange'),
levels = efaAnalysis$group
)
leaflet() %>%
addPolygons(data = efaAnalysis$SHAPE,fillOpacity = 1, color = ~pal(group), weight = .8) %>%
addProviderTiles(providers$CartoDB.Positron) %>% # providers$Esri.WorldStreetMap
addLayersControl(
overlayGroups =c("2020 Pov-20% Min-40%", "2020 Pov-25% Min-40%","2020 Pov-20% Min 40% Veh-10%","2017 Pov-20% Min-40%","2017 Pov-25% MIn-40%"),
options = layersControlOptions(collapsed=FALSE)
)
# View in Maps-------------------------------------------------------------------------------------------------------------------------------------------------------------#
pal <- colorFactor(
palette = c('red', 'blue', 'green', 'purple', 'orange'),
levels = c("2020 Pov-20% Min-40%", "2020 Pov-25% Min-40%","2020 Pov-20% Min 40% Veh-10%","2017 Pov-20% Min-40%","2017 Pov-25% MIn-40%"),
)
leaflet() %>%
addPolygons(data = efaAnalysis$SHAPE,fillOpacity = 1, color = ~pal(group), weight = .8) %>%
addProviderTiles(providers$CartoDB.Positron) %>% # providers$Esri.WorldStreetMap
addLayersControl(
overlayGroups =c("2020 Pov-20% Min-40%", "2020 Pov-25% Min-40%","2020 Pov-20% Min 40% Veh-10%","2017 Pov-20% Min-40%","2017 Pov-25% MIn-40%"),
options = layersControlOptions(collapsed=FALSE)
)
# View in Maps-------------------------------------------------------------------------------------------------------------------------------------------------------------#
pal <- colorFactor(
palette = c('red', 'blue', 'green', 'purple', 'orange'),
levels = c("2020 Pov-20% Min-40%", "2020 Pov-25% Min-40%","2020 Pov-20% Min 40% Veh-10%","2017 Pov-20% Min-40%","2017 Pov-25% MIn-40%"),
)
leaflet() %>%
addPolygons(data = efaAnalysis$SHAPE,fillOpacity = 1, color = ~pal(group), weight = .8) %>%
addProviderTiles(providers$CartoDB.Positron) %>% # providers$Esri.WorldStreetMap
addLayersControl(
overlayGroups =c("2020 Pov-20% Min-40%", "2020 Pov-25% Min-40%","2020 Pov-20% Min 40% Veh-10%","2017 Pov-20% Min-40%","2017 Pov-25% MIn-40%"),
options = layersControlOptions(collapsed=FALSE)
)
leaflet() %>%
addPolygons(data = efaAnalysis$SHAPE,fillOpacity = 1, color = ~pal(efaAnalysis$group), weight = .8) %>%
addProviderTiles(providers$CartoDB.Positron) %>% # providers$Esri.WorldStreetMap
addLayersControl(
overlayGroups =c("2020 Pov-20% Min-40%", "2020 Pov-25% Min-40%","2020 Pov-20% Min 40% Veh-10%","2017 Pov-20% Min-40%","2017 Pov-25% MIn-40%"),
options = layersControlOptions(collapsed=FALSE)
)
#Create EFA GeoPackage for Secondary Analysis-------------------------------------------------------------------------------------------------------------------------------------------------------------#
#' create more spatial options where we adjust slightly the percentage calculation by using a poverty threshold of 20% instead of 25%
efaPerc2020Pov25NoCarshp <- efa2020shp %>% filter(HighestPerc25woCar > 0) %>%
delete_low_pop_dens() %>% mutate(group = "2020 Pov-25% Min-40%",color = "blue")
efaPerc2020Pov20NoCarshp<- efa2020shp %>% filter(HighestPerc20woCar > 0) %>%
delete_low_pop_dens() %>% mutate(group = "2020 Pov-20% Min-40%",color = "red")
efaPerc2020Pov20Carshp <- efa2020shp %>% filter(HighestPerc20wCar > 0) %>%
delete_low_pop_dens() %>% mutate(group = "2020 Pov-20% Min 40% Veh-10%",color = "yellow")
efaPerc2017shp <- efashp2017 %>%  mutate(Perc_Pov25 = ifelse(PercPovert > 0.25,1,0), Perc_Pov20 = ifelse(PercPovert > 0.2,1,0)) %>%
mutate(SD_Pov = as.numeric(SD_Pov),SD_Minorit = as.numeric(SD_Minorit),SD_ZeroCar = as.numeric(SD_ZeroCar),HighestStD = as.numeric(HighestStD)) %>%
mutate(HighestPerc25woCar = pmax(Perc_Pov25,SD_Minorit), HighestPerc20woCar = pmax(Perc_Pov20,SD_Minorit)) %>%
mutate(SHAPE = geometry)
efaPerc2017Pov25NoCarshp <- efaPerc2017shp %>% filter(HighestPerc25woCar > 0) %>% mutate(group = "2017 Pov-25% Min-40%",color = "green")
efaPerc2017Pov20NoCarshp<- efaPerc2017shp %>% filter(HighestPerc20woCar > 0) %>% mutate(group = "2017 Pov-20% Min-40%",color = "purple")
efaAnalysis <- bind_rows(list(efaPerc2020Pov25NoCarshp,efaPerc2020Pov20NoCarshp,efaPerc2020Pov20Carshp,efaPerc2017Pov25NoCarshp,efaPerc2017Pov20NoCarshp)) %>%
mutate(group = as.factor(group))
leaflet() %>%
addPolygons(data = efaAnalysis$SHAPE,fillOpacity = 1, color = efaAnalysis$color, weight = .8) %>%
addProviderTiles(providers$CartoDB.Positron) %>% # providers$Esri.WorldStreetMap
addLayersControl(
overlayGroups =c("2020 Pov-20% Min-40%", "2020 Pov-25% Min-40%","2020 Pov-20% Min 40% Veh-10%","2017 Pov-20% Min-40%","2017 Pov-25% MIn-40%"),
options = layersControlOptions(collapsed=FALSE)
)
leaflet() %>%
addPolygons(data = efaAnalysis$SHAPE,fillOpacity = 1, fillColor = efaAnalysis$color,color = efaAnalysis$color, weight = .8) %>%
addProviderTiles(providers$CartoDB.Positron) %>% # providers$Esri.WorldStreetMap
addLayersControl(
overlayGroups =c("2020 Pov-20% Min-40%", "2020 Pov-25% Min-40%","2020 Pov-20% Min 40% Veh-10%","2017 Pov-20% Min-40%","2017 Pov-25% MIn-40%"),
options = layersControlOptions(collapsed=FALSE)
)
leaflet() %>%
addPolygons(data = efaAnalysis$SHAPE,fillOpacity = 1, fillColor = efaAnalysis$color, color = efaAnalysis$color, weight = .8) %>%
addProviderTiles(providers$CartoDB.Positron) %>% # providers$Esri.WorldStreetMap
addLayersControl(
overlayGroups = efaAnalysis$group
options = layersControlOptions(collapsed=FALSE)
)
plot_comparison_map <- function(){
leaflet() %>%
addPolygons(data = efaAnalysis$SHAPE,fillOpacity = 1, fillColor = efaAnalysis$color, color = efaAnalysis$color, weight = .8) %>%
addProviderTiles(providers$CartoDB.Positron) %>% # providers$Esri.WorldStreetMap
addLayersControl(
overlayGroups = efaAnalysis$group,
options = layersControlOptions(collapsed=FALSE)
)
leaflet() %>%
addPolygons(data = efaAnalysis$SHAPE,fillOpacity = 1, fillColor = efaAnalysis$color, color = efaAnalysis$color, weight = .8) %>%
addProviderTiles(providers$CartoDB.Positron) %>% # providers$Esri.WorldStreetMap
addLayersControl(
overlayGroups = efaAnalysis$group,
options = layersControlOptions(collapsed=FALSE)
)
leaflet() %>%
addPolygons(data = efaAnalysis$SHAPE,fillOpacity = .5, fillColor = efaAnalysis$color, color = efaAnalysis$color, weight = .8) %>%
addProviderTiles(providers$CartoDB.Positron) %>% # providers$Esri.WorldStreetMap
addLayersControl(
overlayGroups = efaAnalysis$group,
options = layersControlOptions(collapsed=FALSE)
)
leaflet() %>%
addPolygons(data = efaAnalysis$SHAPE,fillOpacity = .5, fillColor = efaAnalysis$group, color = efaAnalysis$color, weight = .8) %>%
addProviderTiles(providers$CartoDB.Positron) %>% # providers$Esri.WorldStreetMap
addLayersControl(
overlayGroups = efaAnalysis$group,
options = layersControlOptions(collapsed=FALSE)
)
leaflet() %>%
addPolygons(data = efaAnalysis$SHAPE,fillOpacity = .5, fillColor = efaAnalysis$group, color = efaAnalysis$group, weight = .8) %>%
addProviderTiles(providers$CartoDB.Positron) %>% # providers$Esri.WorldStreetMap
addLayersControl(
overlayGroups = efaAnalysis$group,
options = layersControlOptions(collapsed=FALSE)
)
leaflet() %>%
addPolygons(data = efaAnalysis$SHAPE, fillOpacity = .5, fillColor = efaAnalysis$color, color = efaAnalysis$color, weight = .8) %>%
addProviderTiles(providers$CartoDB.Positron) %>% # providers$Esri.WorldStreetMap
addLayersControl(
overlayGroups = efaAnalysis$group,
options = layersControlOptions(collapsed=FALSE)
)
leaflet(efaAnalysis) %>%
addPolygons(data = efaAnalysis$SHAPE, fillOpacity = .5, fillColor = efaAnalysis$color, color = efaAnalysis$color, weight = .8) %>%
addProviderTiles(providers$CartoDB.Positron) %>% # providers$Esri.WorldStreetMap
addLayersControl(
overlayGroups = efaAnalysis$group,
options = layersControlOptions(collapsed=FALSE)
)
leaflet(efaAnalysis) %>%
addPolygons(data = efaAnalysis$SHAPE, fillOpacity = .5, fillColor = efaAnalysis$color, color = efaAnalysis$color, group = efaAnalysisgroup, weight = .8) %>%
addProviderTiles(providers$CartoDB.Positron) %>% # providers$Esri.WorldStreetMap
addLayersControl(
overlayGroups = efaAnalysis$group,
options = layersControlOptions(collapsed=FALSE)
)
leaflet(efaAnalysis) %>%
addPolygons(data = efaAnalysis$SHAPE, fillOpacity = .5, fillColor = efaAnalysis$color, color = efaAnalysis$color, group = efaAnalysis$group, weight = .8) %>%
addProviderTiles(providers$CartoDB.Positron) %>% # providers$Esri.WorldStreetMap
addLayersControl(
overlayGroups = efaAnalysis$group,
options = layersControlOptions(collapsed=FALSE)
)
runApp("R/efamap")
runApp("R/efamap")
runApp("R/efamap")
leaflet(efaAnalysis) %>%
addPolygons(data = efaAnalysis$SHAPE, fillOpacity = .5, fillColor = efaAnalysis$color, color = efaAnalysis$color, group = efaAnalysis$group, weight = .8) %>%
addProviderTiles(providers$CartoDB.Positron) %>% # providers$Esri.WorldStreetMap
addLegend(
"bottomleft", # Legend position
pal=efaAnalysis$color, # color palette
values= ~efaAnalysis$group, # legend values
opacity = 1,
title="Type of Crime Committed"
)
leaflet(efaAnalysis) %>%
addPolygons(data = efaAnalysis$SHAPE, fillOpacity = .5, fillColor = efaAnalysis$color, color = efaAnalysis$color, group = efaAnalysis$group, weight = .8) %>%
addProviderTiles(providers$CartoDB.Positron) %>% # providers$Esri.WorldStreetMap
addLegend(
"bottomleft", # Legend position
values= ~efaAnalysis$group, # legend values
opacity = 1,
title="Type of Crime Committed"
)
runApp("R/efamap")
rsconnect::deployApp("R/efamap")
leaflet() %>%
addPolygons(data = efaAnalysis$SHAPE, fillOpacity = .5, fillColor = efaAnalysis$color, color = efaAnalysis$color, group = efaAnalysis$group, weight = .8) %>%
addProviderTiles(providers$CartoDB.Positron) %>%  # providers$Esri.WorldStreetMap
addLayersControl(
overlayGroups = efaAnalysis$group,
options = layersControlOptions(collapsed=FALSE)
)
runApp("R/efamap")
rsconnect::showLogs()
rsconnect::showLogs(efamap)
rsconnect::showLogs("efamap")
rsconnect::showLogs("R/efamap")
rsconnect::deployApp("R/efamap")
